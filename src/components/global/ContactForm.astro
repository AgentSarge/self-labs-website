---
---

<!-- Modal Overlay -->
<div
  id="contact-modal"
  class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden items-center justify-center p-4"
>
  <div
    id="modal-card"
    class="bg-black border-2 border-white/20 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto relative"
  >
    <!-- Close Button -->
    <button
      id="close-modal"
      class="absolute top-4 right-4 text-white hover:text-orange transition-colors p-2"
      aria-label="Close form"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

    <!-- Form Content -->
    <div id="form-container" class="p-8">
      <h2 class="text-3xl font-black text-white uppercase mb-2">
        Let's Build Something Great
      </h2>
      <p class="text-eagle mb-6">
        Tell us about your project and we'll get back to you within 24 hours.
      </p>

      <form
        id="contact-form"
        name="contact"
        method="POST"
        action=""
        data-netlify="true"
        data-netlify-honeypot="bot-field"
        class="space-y-4"
      >
        <!-- Netlify Forms Setup -->
        <input type="hidden" name="form-name" value="contact" />
        <p class="hidden">
          <label>
            Don't fill this out if you're human: <input name="bot-field" />
          </label>
        </p>

        <!-- Name -->
        <div>
          <label for="name" class="block text-white font-bold mb-2 uppercase text-sm">
            Name *
          </label>
          <input
            type="text"
            id="name"
            name="name"
            required
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors"
            placeholder="Your name"
          />
        </div>

        <!-- Email -->
        <div>
          <label for="email" class="block text-white font-bold mb-2 uppercase text-sm">
            Email *
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors"
            placeholder="your@email.com"
          />
        </div>

        <!-- Phone -->
        <div>
          <label for="phone" class="block text-white font-bold mb-2 uppercase text-sm">
            Phone *
          </label>
          <input
            type="tel"
            id="phone"
            name="phone"
            required
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors"
            placeholder="(943) 234-9570"
          />
        </div>

        <!-- Project Type -->
        <div>
          <label for="project-type" class="block text-white font-bold mb-2 uppercase text-sm">
            What are you interested in? *
          </label>
          <select
            id="project-type"
            name="project-type"
            required
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors"
          >
            <option value="">Select an option</option>
            <option value="one-time-build">One-Time Website Build ($300-$2,500+)</option>
            <option value="monthly-retainer">Monthly Maintenance Retainer ($50-$200/month)</option>
            <option value="both">Both - Build & Maintenance</option>
            <option value="consultation">Just Want to Chat / Consultation</option>
            <option value="other">Other</option>
          </select>
        </div>

        <!-- Budget Range -->
        <div>
          <label for="budget" class="block text-white font-bold mb-2 uppercase text-sm">
            Budget Range
          </label>
          <select
            id="budget"
            name="budget"
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors"
          >
            <option value="">Select budget range</option>
            <option value="300-500">$300 - $500</option>
            <option value="500-1000">$500 - $1,000</option>
            <option value="1000-2000">$1,000 - $2,000</option>
            <option value="2000-2500">$2,000 - $2,500</option>
            <option value="2500+">$2,500+</option>
            <option value="flexible">Flexible / Not Sure</option>
          </select>
        </div>

        <!-- Timeline -->
        <div>
          <label for="timeline" class="block text-white font-bold mb-2 uppercase text-sm">
            When do you need this?
          </label>
          <select
            id="timeline"
            name="timeline"
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors"
          >
            <option value="">Select timeline</option>
            <option value="asap">ASAP / Urgent</option>
            <option value="1-2-weeks">1-2 Weeks</option>
            <option value="1-month">Within a Month</option>
            <option value="flexible">Flexible / Just Exploring</option>
          </select>
        </div>

        <!-- Features/Services (Multiple Choice) -->
        <div>
          <label class="block text-white font-bold mb-3 uppercase text-sm">
            What features do you need? (Select all that apply)
          </label>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="custom-design"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Custom Design</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="e-commerce"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">E-commerce / Online Store</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="contact-forms"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Contact Forms</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="blog"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Blog / News Section</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="seo"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">SEO Optimization</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="mobile-responsive"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Mobile Responsive</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="email-setup"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Email Setup (Google Workspace)</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="analytics"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Analytics & Tracking</span>
            </label>
            <label class="flex items-center text-white text-sm cursor-pointer">
              <input
                type="checkbox"
                name="features[]"
                value="booking-system"
                class="w-4 h-4 bg-black border-white/20 rounded text-orange focus:ring-orange focus:ring-1"
              />
              <span class="ml-3">Booking / Appointment System</span>
            </label>
          </div>
        </div>

        <!-- Message -->
        <div>
          <label for="message" class="block text-white font-bold mb-2 uppercase text-sm">
            Tell us about your project *
          </label>
          <textarea
            id="message"
            name="message"
            required
            rows="5"
            class="w-full px-4 py-3 bg-black border border-white/20 text-white rounded-lg focus:border-orange focus:ring-1 focus:ring-orange outline-none transition-colors resize-none"
            placeholder="Describe your project, goals, and any specific features you need..."
          ></textarea>
        </div>

        <!-- Submit Button -->
        <button
          type="submit"
          class="w-full bg-orange hover:bg-white text-white hover:text-black font-black uppercase py-4 px-6 rounded-full transition-colors duration-200 text-lg"
        >
          Send Message
        </button>
      </form>
    </div>

    <!-- Success Message (Hidden by default) -->
    <div id="success-container" class="p-8 hidden">
      <div class="text-center mb-8">
        <!-- Success Icon -->
        <div class="flex justify-center mb-6">
          <div class="bg-orange rounded-full p-4">
            <svg class="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
        </div>

        <h2 class="text-3xl font-black text-white uppercase mb-2">
          Thanks for reaching out!
        </h2>
        <p class="text-eagle mb-2">
          We've received your message and will respond within 24 hours.
        </p>
        <p class="text-white text-sm mb-8">
          Want to discuss your project sooner?
        </p>
      </div>

      <!-- Scheduling Options -->
      <div class="space-y-4">
        <h3 class="text-xl font-black text-white uppercase text-center mb-4">
          Schedule a <span class="text-orange">Meeting</span>
        </h3>

        <!-- Video Call Button -->
        <a
          id="schedule-video-call"
          href="#"
          class="flex items-center justify-between w-full bg-orange hover:bg-white text-white hover:text-black font-black uppercase py-4 px-6 rounded-full transition-colors duration-200 group"
          data-calendly-url="https://calendly.com/self-labs-support/30min"
          role="button"
        >
          <div class="flex items-center">
            <svg class="w-6 h-6 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
            </svg>
            <span>Schedule Video Call</span>
          </div>
          <svg class="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>

        

        <!-- Action Buttons -->
        <div class="flex gap-4">
          <button
            id="skip-scheduling"
            class="flex-1 text-eagle hover:text-white font-bold uppercase py-3 transition-colors text-sm"
          >
            Skip for now
          </button>
          <button
            id="close-after-schedule"
            class="flex-1 bg-white/10 hover:bg-white/20 text-white font-bold uppercase py-3 transition-colors text-sm"
          >
            Close
          </button>
        </div>
      </div>
    </div>

    <!-- Calendly Inline Container (responsive, shown when scheduling) -->
    <div id="calendly-container" class="hidden p-0">
      <div class="flex items-center justify-between px-4 pt-4">
        <button id="calendly-back" class="text-eagle hover:text-white uppercase text-xs font-bold">← Back</button>
      </div>
      <div class="px-4 pb-4">
        <div id="calendly-inline" class="calendly-inline-widget w-full" style="min-width:320px;height:80vh;">
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Open modal
  const openModalButtons = document.querySelectorAll('[data-open-contact]');
  const modal = document.getElementById('contact-modal');
  const closeButton = document.getElementById('close-modal');
  const contactForm = document.getElementById('contact-form') as HTMLFormElement;
  const formContainer = document.getElementById('form-container');
  const successContainer = document.getElementById('success-container');
  const skipButton = document.getElementById('skip-scheduling');
  const scheduleVideoBtn = document.getElementById('schedule-video-call');
  const closeAfterScheduleBtn = document.getElementById('close-after-schedule');
  const calendlyContainer = document.getElementById('calendly-container');
  const calendlyInline = document.getElementById('calendly-inline');
  const calendlyBack = document.getElementById('calendly-back');
  const modalCard = document.getElementById('modal-card');

  openModalButtons.forEach(button => {
    button.addEventListener('click', (e) => {
      e.preventDefault();
      modal?.classList.remove('hidden');
      modal?.classList.add('flex');
      document.body.style.overflow = 'hidden';
    });
  });

  // Handle form submission with AJAX for modal forms
  contactForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(contactForm);
    
    try {
      // Send to Netlify's form processing endpoint
      const response = await fetch('/', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams(formData as any).toString()
      });

      if (response.ok) {
        // Show success message
        formContainer?.classList.add('hidden');
        successContainer?.classList.remove('hidden');
      } else {
        alert('There was an error submitting your form. Please try again.');
      }
    } catch (error) {
      alert('There was an error submitting your form. Please try again.');
    }
  });

  // Skip scheduling button
  skipButton?.addEventListener('click', () => {
    closeModal();
  });

  // Close after scheduling button
  closeAfterScheduleBtn?.addEventListener('click', () => {
    closeModal();
  });

  // Ensure Calendly embed is loaded (script + stylesheet)
  function ensureCalendlyLoaded() {
    return new Promise<void>((resolve) => {
      if (typeof window !== 'undefined' && (window as any).Calendly) {
        resolve();
        return;
      }
      // Load stylesheet once
      const existingCss = document.querySelector('link[data-calendly]');
      if (!existingCss) {
        const link = document.createElement('link');
        link.rel = 'stylesheet';
        link.href = 'https://assets.calendly.com/assets/external/widget.css';
        link.setAttribute('data-calendly', 'true');
        document.head.appendChild(link);
      }
      // Load script once
      const existing = document.querySelector('script[data-calendly]') as HTMLScriptElement | null;
      if (existing && (window as any).Calendly) {
        resolve();
        return;
      }
      const script = existing || document.createElement('script');
      script.src = 'https://assets.calendly.com/assets/external/widget.js';
      script.async = true;
      script.setAttribute('data-calendly', 'true');
      script.onload = () => resolve();
      if (!existing) document.body.appendChild(script);
    });
  }

  // Open Calendly popup - simple and reliable
  scheduleVideoBtn?.addEventListener('click', async (e) => {
    e.preventDefault();
    const url = scheduleVideoBtn.getAttribute('data-calendly-url') || '';
    if (!url) return;
    
    // Use direct window.open for reliability
    window.open(url, '_blank', 'width=800,height=700,scrollbars=yes,resizable=yes');
  });

  // Back from Calendly inline
  calendlyBack?.addEventListener('click', () => {
    calendlyContainer?.classList.add('hidden');
    successContainer?.classList.remove('hidden');
    modalCard?.classList.add('max-w-2xl');
    modalCard?.classList.remove('max-w-4xl');
  });

  // Close modal function
  function closeModal() {
    modal?.classList.add('hidden');
    modal?.classList.remove('flex');
    document.body.style.overflow = '';
    
    // Reset form and views after a delay
    setTimeout(() => {
      contactForm?.reset();
      formContainer?.classList.remove('hidden');
      successContainer?.classList.add('hidden');
    }, 300);
  }

  // Close modal
  closeButton?.addEventListener('click', closeModal);

  // Close on outside click
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      closeModal();
    }
  });

  // Close on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && modal && !modal.classList.contains('hidden')) {
      closeModal();
    }
  });
</script>

